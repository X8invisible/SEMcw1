// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace buildABikeTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Adding Two bikes
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfComboBox uICboxFrameSizeComboBox = this.UIMainWindowWindow.UICboxFrameSizeComboBox;
            WpfListItem uIAmberListItem = this.UIMainWindowWindow.UIAmberListItem;
            WpfListItem uIItem26ListItem = this.UIMainWindowWindow.UIItem26ListItem;
            WpfListItem uILargeListItem = this.UIMainWindowWindow.UILargeListItem;
            WpfComboBox uICboxBrakesComboBox = this.UIMainWindowWindow.UICboxBrakesComboBox;
            WpfComboBox uICboxHandleComboBox = this.UIMainWindowWindow.UICboxHandleComboBox;
            WpfComboBox uICboxSaddleComboBox = this.UIMainWindowWindow.UICboxSaddleComboBox;
            WpfListItem uISmallListItem = this.UIMainWindowWindow.UISmallListItem;
            WpfListItem uICyanListItem = this.UIMainWindowWindow.UICyanListItem;
            WpfComboBox uICboxWheelsComboBox = this.UIMainWindowWindow.UICboxWheelsComboBox;
            WpfListItem uISmallListItem1 = this.UIMainWindowWindow.UISmallListItem1;
            WpfListItem uILargeListItem1 = this.UIMainWindowWindow.UILargeListItem1;
            WinButton uICloseButton = this.UIMainWindowWindow1.UICloseButton;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(76, 88));

            // Select 'Medium' in 'cboxFrameSize' combo box
            uICboxFrameSizeComboBox.SelectedItem = this.RecordedMethod1Params.UICboxFrameSizeComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(98, 122));

            // Click 'Amber' list item
            Mouse.Click(uIAmberListItem, new Point(51, 3));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(334, 86));

            // Click '26"' list item
            Mouse.Click(uIItem26ListItem, new Point(38, 10));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(101, 201));

            // Click 'Large' list item
            Mouse.Click(uILargeListItem, new Point(46, 0));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(89, 234));

            // Select 'V-Brakes' in 'cboxBrakes' combo box
            uICboxBrakesComboBox.SelectedItem = this.RecordedMethod1Params.UICboxBrakesComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(321, 176));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(330, 190));

            // Select 'Medium' in 'cboxHandle' combo box
            uICboxHandleComboBox.SelectedItem = this.RecordedMethod1Params.UICboxHandleComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(324, 232));

            // Select 'Large' in 'cboxSaddle' combo box
            uICboxSaddleComboBox.SelectedItem = this.RecordedMethod1Params.UICboxSaddleComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(67, 291));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(358, 301));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(110, 75));

            // Click 'Small' list item
            Mouse.Click(uISmallListItem, new Point(36, 10));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(104, 123));

            // Click 'Cyan' list item
            Mouse.Click(uICyanListItem, new Point(56, 8));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(315, 87));

            // Select '27.5"' in 'cboxWheels' combo box
            uICboxWheelsComboBox.SelectedItem = this.RecordedMethod1Params.UICboxWheelsComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(134, 188));

            // Click 'Small' list item
            Mouse.Click(uISmallListItem1, new Point(38, 9));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(102, 239));

            // Select 'Disk Brakes' in 'cboxBrakes' combo box
            uICboxBrakesComboBox.SelectedItem = this.RecordedMethod1Params.UICboxBrakesComboBoxSelectedItem1;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(304, 231));

            // Select 'Small' in 'cboxSaddle' combo box
            uICboxSaddleComboBox.SelectedItem = this.RecordedMethod1Params.UICboxSaddleComboBoxSelectedItem1;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(321, 198));

            // Click 'Large' list item
            Mouse.Click(uILargeListItem1, new Point(37, 7));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(325, 300));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(15, 24));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Medium' in 'cboxFrameSize' combo box
        /// </summary>
        public string UICboxFrameSizeComboBoxSelectedItem = "Medium";
        
        /// <summary>
        /// Select 'V-Brakes' in 'cboxBrakes' combo box
        /// </summary>
        public string UICboxBrakesComboBoxSelectedItem = "V-Brakes";
        
        /// <summary>
        /// Select 'Medium' in 'cboxHandle' combo box
        /// </summary>
        public string UICboxHandleComboBoxSelectedItem = "Medium";
        
        /// <summary>
        /// Select 'Large' in 'cboxSaddle' combo box
        /// </summary>
        public string UICboxSaddleComboBoxSelectedItem = "Large";
        
        /// <summary>
        /// Select '27.5"' in 'cboxWheels' combo box
        /// </summary>
        public string UICboxWheelsComboBoxSelectedItem = "27.5\"";
        
        /// <summary>
        /// Select 'Disk Brakes' in 'cboxBrakes' combo box
        /// </summary>
        public string UICboxBrakesComboBoxSelectedItem1 = "Disk Brakes";
        
        /// <summary>
        /// Select 'Small' in 'cboxSaddle' combo box
        /// </summary>
        public string UICboxSaddleComboBoxSelectedItem1 = "Small";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UICboxFrameSizeComboBox
        {
            get
            {
                if ((this.mUICboxFrameSizeComboBox == null))
                {
                    this.mUICboxFrameSizeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboxFrameSizeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cboxFrameSize";
                    this.mUICboxFrameSizeComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICboxFrameSizeComboBox;
            }
        }
        
        public WpfListItem UIAmberListItem
        {
            get
            {
                if ((this.mUIAmberListItem == null))
                {
                    this.mUIAmberListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAmberListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Amber";
                    this.mUIAmberListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAmberListItem;
            }
        }
        
        public WpfListItem UIItem26ListItem
        {
            get
            {
                if ((this.mUIItem26ListItem == null))
                {
                    this.mUIItem26ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItem26ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "26\"";
                    this.mUIItem26ListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem26ListItem;
            }
        }
        
        public WpfListItem UILargeListItem
        {
            get
            {
                if ((this.mUILargeListItem == null))
                {
                    this.mUILargeListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUILargeListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Large";
                    this.mUILargeListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILargeListItem;
            }
        }
        
        public WpfComboBox UICboxBrakesComboBox
        {
            get
            {
                if ((this.mUICboxBrakesComboBox == null))
                {
                    this.mUICboxBrakesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboxBrakesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cboxBrakes";
                    this.mUICboxBrakesComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICboxBrakesComboBox;
            }
        }
        
        public WpfComboBox UICboxHandleComboBox
        {
            get
            {
                if ((this.mUICboxHandleComboBox == null))
                {
                    this.mUICboxHandleComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboxHandleComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cboxHandle";
                    this.mUICboxHandleComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICboxHandleComboBox;
            }
        }
        
        public WpfComboBox UICboxSaddleComboBox
        {
            get
            {
                if ((this.mUICboxSaddleComboBox == null))
                {
                    this.mUICboxSaddleComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboxSaddleComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cboxSaddle";
                    this.mUICboxSaddleComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICboxSaddleComboBox;
            }
        }
        
        public WpfListItem UISmallListItem
        {
            get
            {
                if ((this.mUISmallListItem == null))
                {
                    this.mUISmallListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUISmallListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Small";
                    this.mUISmallListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISmallListItem;
            }
        }
        
        public WpfListItem UICyanListItem
        {
            get
            {
                if ((this.mUICyanListItem == null))
                {
                    this.mUICyanListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUICyanListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Cyan";
                    this.mUICyanListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICyanListItem;
            }
        }
        
        public WpfComboBox UICboxWheelsComboBox
        {
            get
            {
                if ((this.mUICboxWheelsComboBox == null))
                {
                    this.mUICboxWheelsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboxWheelsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cboxWheels";
                    this.mUICboxWheelsComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICboxWheelsComboBox;
            }
        }
        
        public WpfListItem UISmallListItem1
        {
            get
            {
                if ((this.mUISmallListItem1 == null))
                {
                    this.mUISmallListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mUISmallListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Small";
                    this.mUISmallListItem1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISmallListItem1;
            }
        }
        
        public WpfListItem UILargeListItem1
        {
            get
            {
                if ((this.mUILargeListItem1 == null))
                {
                    this.mUILargeListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mUILargeListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Large";
                    this.mUILargeListItem1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILargeListItem1;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUICboxFrameSizeComboBox;
        
        private WpfListItem mUIAmberListItem;
        
        private WpfListItem mUIItem26ListItem;
        
        private WpfListItem mUILargeListItem;
        
        private WpfComboBox mUICboxBrakesComboBox;
        
        private WpfComboBox mUICboxHandleComboBox;
        
        private WpfComboBox mUICboxSaddleComboBox;
        
        private WpfListItem mUISmallListItem;
        
        private WpfListItem mUICyanListItem;
        
        private WpfComboBox mUICboxWheelsComboBox;
        
        private WpfListItem mUISmallListItem1;
        
        private WpfListItem mUILargeListItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
